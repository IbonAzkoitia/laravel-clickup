name: run-tests

on:
  push:
    paths:
      - '**.php'
      - '.github/workflows/run-tests.yml'
      - 'phpunit.xml'
      - 'composer.json'
      - 'composer.lock'

jobs:
  test:
    runs-on: ${{ matrix.os }}

    if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name == 'push'

    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.4]
        laravel: [11.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 11.*
            testbench: 9.*
            carbon: ^2.63

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.os == 'windows-latest' && '^^^' || '' }}${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Create Testing Environment
        env:
          CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
          CLICKUP_TEST_LIST_ID: ${{ secrets.CLICKUP_TEST_LIST_ID }}
          CLICKUP_TEST_TEAM_ID: ${{ secrets.CLICKUP_TEST_TEAM_ID }}
          CLICKUP_TEST_TASK_ID: ${{ secrets.CLICKUP_TEST_TASK_ID }}
          CLICKUP_TEST_TASK_ID_2: ${{ secrets.CLICKUP_TEST_TASK_ID_2 }}
          CLICKUP_TEST_TEMPLATE_ID: ${{ secrets.CLICKUP_TEST_TEMPLATE_ID }}
        run: |
          cp .env.testing.example .env.testing
          sed -i "s/CLICKUP_API_TOKEN=.*/CLICKUP_API_TOKEN=${CLICKUP_API_TOKEN}/" .env.testing
          sed -i "s/CLICKUP_TEST_LIST_ID=.*/CLICKUP_TEST_LIST_ID=${CLICKUP_TEST_LIST_ID}/" .env.testing
          sed -i "s/CLICKUP_TEST_TEAM_ID=.*/CLICKUP_TEST_TEAM_ID=${CLICKUP_TEST_TEAM_ID}/" .env.testing
          sed -i "s/CLICKUP_TEST_TASK_ID=.*/CLICKUP_TEST_TASK_ID=${CLICKUP_TEST_TASK_ID}/" .env.testing
          sed -i "s/CLICKUP_TEST_TASK_ID_2=.*/CLICKUP_TEST_TASK_ID_2=${CLICKUP_TEST_TASK_ID_2}/" .env.testing
          sed -i "s/CLICKUP_TEST_TEMPLATE_ID=.*/CLICKUP_TEST_TEMPLATE_ID=${CLICKUP_TEST_TEMPLATE_ID}/" .env.testing

      - name: Execute tests
        run: vendor/bin/pest --configuration phpunit.xml --ci
